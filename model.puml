@startuml
class rest.order.Model.Table {
~ int tableNO
~ int seats
~ String locationString
~ int tableQue
+ <<Create>> Table(int,int,String,int)
}
class rest.order.Model.Worker {
~ UserClass uClass
+ <<Create>> Worker(int,String,String,String,UserClass)
}
class rest.order.Model.Book {
- Integer bookingID
~ SimpleDateFormat bookDateFormat
~ SimpleDateFormat bookTimeFormat
~ Calendar bookingDate
~ Calendar bookingTime
~ Customer mainCustomer
~ int customerCount
+ <<Create>> Book(Integer,SimpleDateFormat,SimpleDateFormat,Calendar,Calendar,Customer,int)
}
class rest.order.Model.Records {
- Integer recordID
~ Table table
~ Customer customer
~ Book book
+ <<Create>> Records(Integer,Table,Customer,Book)
}
class rest.order.Model.Customer {
~ String phoneNumberString
~ String emailString
~ String customerNameString
~ UserClass userType
+ <<Create>> Customer(int,String,String,String,String,String,String,UserClass)
}
class rest.order.Model.Reciept {
~ Menu menu
~ int count
~ int total
+ <<Create>> Reciept(Menu,int,int)
}
class rest.order.Model.Menu {
~ MenuType type
~ int price
~ String menuNameString
~ int discount
~ int kCal
~ int weight
~ String desCriptionString
+ <<Create>> Menu(MenuType,int,String,int,int,int,String)
}
class rest.order.Model.AppUser {
~ int userID
~ String nickName
~ String loginID
- String passWD
+ <<Create>> AppUser(int,String,String,String)
}


rest.order.Model.AppUser <|-- rest.order.Model.Worker
rest.order.Model.AppUser <|-- rest.order.Model.Customer
@enduml